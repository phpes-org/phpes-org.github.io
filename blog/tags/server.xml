<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[PHP-ES]]></title>
    <link href="https://www.phpes.org/blog/tags/server.xml" rel="self"/>
    <link href="https://www.phpes.org/"/>
    <updated>2025-07-09T18:42:03+00:00</updated>
    <id>https://www.phpes.org/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[FrankenPHP 1.3]]></title>
            <link href="https://www.phpes.org/blog/2024/11/14/frankenphp-130/"/>
            <updated>2024-11-14T00:00:00+00:00</updated>
            <id>https://www.phpes.org/blog/2024/11/14/frankenphp-130/</id>
            <content type="html"><![CDATA[<p>Uma nova versão <a href="https://frankenphp.dev/">FrankenPHP</a> foi lançada e de acordo com benchmark realizados pelo time de desenvolvimento, essa nova versão 1.3 é 54% mais eficiente que a versão anterior.</p>

<p>Para quem ainda não conhece, FrankenPHP é um servidor de aplicação PHP constrituído em cima do servidor web Caddy. Além servir arquivos PHP nativamente, ainda possui suporte a Server-Sent Events através do protocolo <a href="https://mercure.rocks/">Mercure</a>.</p>

<p><a href="https://dunglas.dev/2024/11/frankenphp-1-3-massive-performance-improvements-watcher-mode-dedicated-prometheus-metrics-and-more/">https://dunglas.dev/2024/11/frankenphp-1-3-massive-performance-improvements-watcher-mode-dedicated-prometheus-metrics-and-more/</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PPM - PHP Process Manager]]></title>
            <link href="https://www.phpes.org/blog/2016/04/19/ppm-php-process-manager/"/>
            <updated>2016-04-19T00:00:00+00:00</updated>
            <id>https://www.phpes.org/blog/2016/04/19/ppm-php-process-manager/</id>
            <content type="html"><![CDATA[<p>PHP-PM é um gerenciador de processo, supercharger e load balancer para aplicações PHP que chega a ser 15 vezes mais rápidos do uma aplicação PHP tradicional.</p>

<blockquote>
  <p>It's based on ReactPHP and works best with applications that use request-response frameworks like Symfony's HTTPKernel. The approach of this is to kill the expensive bootstrap of PHP (declaring symbols, loading/parsing files) and the bootstrap of feature-rich frameworks. See Performance section for a quick hint. PHP-PM basically spawns several PHP instances as worker bootstraping your application (eg. the whole Symfony Kernel) and hold it in the memory to be prepared for every incoming request: This is why PHP-PM makes your application so fast.</p>
</blockquote>

<p>Repositório do projeto: <a href="https://github.com/php-pm/php-pm">https://github.com/php-pm/php-pm</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Aplicação Symfony como HTTP Server]]></title>
            <link href="https://www.phpes.org/blog/2016/04/18/aplicacao-symfony-como-http-server/"/>
            <updated>2016-04-18T00:00:00+00:00</updated>
            <id>https://www.phpes.org/blog/2016/04/18/aplicacao-symfony-como-http-server/</id>
            <content type="html"><![CDATA[<p>Tutorial ensinando transformar uma aplicação Symfony em um servidor HTTP pronto para executar, e sem necessidade servidor adicional como por exemplo NGINX e/ou Apache2, utilizando a biblioteca ReactPHP.</p>

<blockquote>
  <p>TL;DR: Run your application as a HTTP server to increase its performances.</p>
  
  <p>HTTP frameworks, such as Symfony, allow us to build applications that have the potential to achieve Super Speed.</p>
  
  <p>A first way to make use of it is to run our application as a HTTP server. In this article we'll take a Symfony application and demonstrate how to run it as HTTP server using ReactPHP.</p>
</blockquote>

<p>Fonte: <a href="https://gnugat.github.io/2016/04/13/super-speed-sf-react-php.html">https://gnugat.github.io/2016/04/13/super-speed-sf-react-php.html</a></p>
]]></content>
        </entry>
    </feed>