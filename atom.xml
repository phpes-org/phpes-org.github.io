<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[PHP-ES]]></title>
    <link href="http://www.phpes.org/atom.xml" rel="self"/>
    <link href="http://www.phpes.org/"/>
    <updated>2017-03-01T13:01:35-03:00</updated>
    <id>http://www.phpes.org/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Benchmarking Laravel, Symfony, &amp; Zend]]></title>
            <link href="http://www.phpes.org/blog/2017/03/01/benchmarking-laravel-symfony-zend"/>
            <updated>2017-03-01T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2017/03/01/benchmarking-laravel-symfony-zend</id>
            <content type="html"><![CDATA[<p>Post (inglês) demonstrando um benchmark entre os frameworks <a href="https://laravel.com">Laravel</a>, <a href="https://symfony.com">Symfony</a> e <a href="https://framework.zend.com">Zend</a>.</p>

<blockquote>
  <p>A variety of benchmarks comparing PHP frameworks float around the web. However, they are often comparing “apples” to “oranges”. In particular, I want to focus on Laravel, Symfony, and Zend and why these three frameworks are often benchmarked incorrectly against each other.</p>
</blockquote>

<p>Fonte: <a href="https://medium.com/@taylorotwell/benchmarking-laravel-symfony-zend-2c01c2b270f8">https://medium.com/@taylorotwell/benchmarking-laravel-symfony-zend-2c01c2b270f8</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP Middleworld]]></title>
            <link href="http://www.phpes.org/blog/2017/02/14/php-middleworld"/>
            <updated>2017-02-14T00:00:00-02:00</updated>
            <id>http://www.phpes.org/blog/2017/02/14/php-middleworld</id>
            <content type="html"><![CDATA[<p><a href="http://www.php-middleworld.com/">PHP Middleworld</a> é um site que facilita a busca por implementações de middleware da <a href="http://www.php-fig.org/psr/psr-7/">PSR-7</a> para serem utilizados em frameworks compatíveis.</p>

<blockquote>
  <p>What is middleware?</p>
  
  <p>In the realm of web application development Middleware refers to functions wrapped around business logic. They rely upon the decorator pattern and are composed in a sort of layered stack. You could think of them as onion layers, with your business logic residing at the innermost stratum (more on Wikipedia).</p>
  
  <p>Several modern PHP frameworks (such as Zend Expressive and Slim) embrace such framework-agnostic, reuse-oriented paradigm, wholly supporting PSR-7 compliant middleware.</p>
  
  <p>Goal for PHP Middleworld is collecting all available PSR-7 compliant middleware and provide a unique, consistent repository, encouraging middleware reuse and exchange among PHP developers.</p>
</blockquote>

<p>Visualizar todos os middlewares disponíveis: <a href="http://www.php-middleworld.com/explore">http://www.php-middleworld.com/explore</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Mailer RCE Flaw Vulnerability]]></title>
            <link href="http://www.phpes.org/blog/2017/01/10/mailer-rce-flaw-vulnerability"/>
            <updated>2017-01-10T00:00:00-02:00</updated>
            <id>http://www.phpes.org/blog/2017/01/10/mailer-rce-flaw-vulnerability</id>
            <content type="html"><![CDATA[<p>No final do ano passado foram encontradas falhas RCE (Remote Code Execution) nas seguintes bibliotecas: PHPMailer (até v5.2.20) SwiftMailer (até v5.4.4) e Zend-mail (até v2.4.10).</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/xyYMYvT2bx8" frameborder="0" allowfullscreen></iframe>

<p>Maiores detalhes:</p>

<ul>
<li>PHPMailer &lt; 5.2.18 Remote Code Execution (CVE-2016-10033)</li>
<li>PHPMailer &lt; 5.2.20 Remote Code Execution (CVE-2016-10045 / escapeshell bypass)</li>
<li>SwiftMailer &lt;= 5.4.5-DEV Remote Code Execution (CVE-2016-10074)</li>
<li>Zend Framework / zend-mail &lt; 2.4.11 - Remote Code Execution (CVE-2016-10034)</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PsySH]]></title>
            <link href="http://www.phpes.org/blog/2016/12/02/psysh"/>
            <updated>2016-12-02T00:00:00-02:00</updated>
            <id>http://www.phpes.org/blog/2016/12/02/psysh</id>
            <content type="html"><![CDATA[<p><a href="http://psysh.org/">PsySH</a> é um console interativo para desenvolvimento PHP muito semelhante ao console do Python.</p>

<blockquote>
  <p>psysh</p>
  
  <p>A runtime developer console, interactive debugger and REPL for PHP.</p>
</blockquote>

<p>Instalação</p>

<pre><code class="sh">$ wget https://git.io/psysh
$ chmod +x psysh
</code></pre>

<p>Uso</p>

<pre><code class="sh">$ ./psysh
</code></pre>

<p>Após executar o comando <code>psysh</code> iniciará o console interativo. Para saber mais sobre as funcionalidades acesse o site do projeto: <a href="http://psysh.org/#features">http://psysh.org/#features</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Dontbug debugger]]></title>
            <link href="http://www.phpes.org/blog/2016/10/14/dontbug-debugger"/>
            <updated>2016-10-14T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/10/14/dontbug-debugger</id>
            <content type="html"><![CDATA[<p><a href="https://github.com/sidkshatriya/dontbug">Dontbug debugger</a> permite gravar a execução de scripts PHP e depois visualizar a execução na IDE através do modo debug (tanto a execução normal quanto reversa).</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/DA76z77KtY0" frameborder="0" allowfullscreen></iframe>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Design Patterns PHP]]></title>
            <link href="http://www.phpes.org/blog/2016/09/19/design-patterns-php"/>
            <updated>2016-09-19T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/09/19/design-patterns-php</id>
            <content type="html"><![CDATA[<blockquote>
  <p>Esta é uma coleção de padrões de projetos conhecidos e alguns códigos de exemplo de como implementá-los em PHP. Todo padrão tem uma pequena lista de exemplos (muitos deles vindos do Zend Framework, Symfony2 ou Doctrine2 já que tenho mais familiaridade com eles</p>
  
  <p>Eu acredito que o problema com os padrões é que muitas pessoas os conhecem mas não sabem quando aplicá-los</p>
</blockquote>

<ul>
<li>Original (en): <a href="http://designpatternsphp.readthedocs.io/">DesignPatternsPHP</a></li>
<li>Português (pt_BR): <a href="http://designpatternsphp.readthedocs.io/pt_BR/latest/README.html">DesignPatternsPHP</a></li>
<li>Código-fonte: <a href="https://github.com/domnikl/DesignPatternsPHP">Github</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Symfony 500million]]></title>
            <link href="http://www.phpes.org/blog/2016/09/14/symfony-500million"/>
            <updated>2016-09-14T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/09/14/symfony-500million</id>
            <content type="html"><![CDATA[<p>Desde o lançamento do Symfony 2.0 (28 de julho de 2011) os pacotes dos componentes do framework já foram baixados mais de 480 milhões de vezes. E para acompanhar essa marca chegar a 500mi foi lançada uma página com o contador de downloads (apenas downloads via Composer):</p>

<p><a href="https://symfony.com/500million">https://symfony.com/500million</a></p>

<p>De acordo com a página, seguindo a taxa de download atual, a marca de 500 milhões de downloads será alcançada no dia 26 deste mês às 06h34 (horário de Brasília).</p>

<p>E as melhores fotos publicadas no Twitter com a hashtag <code>#500million</code> serão premiadas (<a href="http://symfony.com/blog/the-road-to-500-million-symfony-downloads">conforme publicação no blog oficial</a>).</p>

<p>Fonte: <a href="http://symfony.com/blog/the-road-to-500-million-symfony-downloads">http://symfony.com/blog/the-road-to-500-million-symfony-downloads</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Crunz]]></title>
            <link href="http://www.phpes.org/blog/2016/08/31/crunz"/>
            <updated>2016-08-31T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/08/31/crunz</id>
            <content type="html"><![CDATA[<p><a href="https://github.com/lavary/crunz">Crunz</a> é um agendador de tarefas periódicas escrito em PHP. Possibilitando configurar as tarefas a serem executadas através de uma API fluente.</p>

<pre><code class="php">&lt;?php

use Crunz\Schedule;

$schedule = new Schedule();
$schedule-&gt;run('cp project project-bk')       
         -&gt;daily()

return $schedule;
</code></pre>

<p>E por fim adicionar uma única entrada na crontab para para executar o Crunz a cada minuto:</p>

<pre><code>* * * * * /project/vendor/bin/crunz schedule:run
</code></pre>

<p>Para visualizar maiores informações sobre a biblioteca é só acessar a <a href="https://github.com/lavary/crunz">página do projeto no Github</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Symfony 3 Slides]]></title>
            <link href="http://www.phpes.org/blog/2016/08/02/symfony-3-slides"/>
            <updated>2016-08-02T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/08/02/symfony-3-slides</id>
            <content type="html"><![CDATA[<p>Está disponível na Internet a minha apresentação do curso Symfony 3 (40 horas) que ministrei na Mindworks.</p>

<p>Caso tenha interesse em participar do treinamento basta entrar em contato pelo do site da <a href="http://www.mindworks.com.br/">Mindworks</a> e ver disponibilidade de novas turmas.</p>

<p>Sides: <a href="http://slides.com/rogeriolino/symfony-3">http://slides.com/rogeriolino/symfony-3</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Zend Framework 3 Lançado]]></title>
            <link href="http://www.phpes.org/blog/2016/06/30/zend-framework-3-lancado"/>
            <updated>2016-06-30T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/06/30/zend-framework-3-lancado</id>
            <content type="html"><![CDATA[<p>Dia 28 foi anunciado no blog oficial do Zend Framework o lançamento da versão 3. Agora seguindo a <a href="http://www.php-fig.org/psr/psr-7/">PSR-7</a> e compatível com PHP 7.0.</p>

<p>Fonte: <a href="https://framework.zend.com/blog/2016-06-28-zend-framework-3.html">https://framework.zend.com/blog/2016-06-28-zend-framework-3.html</a></p>
]]></content>
        </entry>
    </feed>