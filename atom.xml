<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[PHP-ES]]></title>
    <link href="http://www.phpes.org/atom.xml" rel="self"/>
    <link href="http://www.phpes.org/"/>
    <updated>2016-04-26T11:30:32-03:00</updated>
    <id>http://www.phpes.org/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Pagekit CMS]]></title>
            <link href="http://www.phpes.org/blog/2016/04/26/pagekit-cms"/>
            <updated>2016-04-26T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/26/pagekit-cms</id>
            <content type="html"><![CDATA[<p>Divulgado hoje no blog do Symfony o novo CMS <a href="https://pagekit.com/">PageKit</a>, que tem o código-fonte aberto e é construído utilizando os components do Symfony. Segundo definição do site do projeto, o PageKit é um CMS moderno, intuitivo, modular, e flexível.</p>

<blockquote>
  <p>Pagekit is an Open Source CMS built with several Symfony Components. Recently we had the opportunity to meet with Jan Schönherr, one of its lead developers, and we talked with him about Symfony and Pagekit.</p>
</blockquote>

<p>Fonte: <a href="http://symfony.com/blog/pagekit-an-open-source-cms-built-with-symfony-components">http://symfony.com/blog/pagekit-an-open-source-cms-built-with-symfony-components</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PuPHPet]]></title>
            <link href="http://www.phpes.org/blog/2016/04/25/puphpet"/>
            <updated>2016-04-25T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/25/puphpet</id>
            <content type="html"><![CDATA[<p><a href="https://puphpet.com/">Puphpet</a> é uma ferramenta gráfica para gerar configuração de máquinas virtuais para o desenvolvimento web. Suporta Vagrant e Puppet.</p>

<blockquote>
  <p>A simple GUI to set up virtual machines for Web development.</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Como usar o MongoDB com PHP]]></title>
            <link href="http://www.phpes.org/blog/2016/04/20/como-usar-o-mongodb-com-php"/>
            <updated>2016-04-20T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/20/como-usar-o-mongodb-com-php</id>
            <content type="html"><![CDATA[<blockquote>
  <p>Dentre os bancos de dados NoSQL da atualidade um dos mais usados é o MongoDB, seja pela sua eficiência em trabalhar com enormes volumes de dados ou pela sua flexibilidade, algo comum em bancos NoSQL. Abordaremos neste artigo como trabalhar com ele no PHP.</p>
</blockquote>

<p>Fonte: <a href="https://blog.butecopensource.org/como-usar-o-mongodb-com-php/">https://blog.butecopensource.org/como-usar-o-mongodb-com-php/</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PPM - PHP Process Manager]]></title>
            <link href="http://www.phpes.org/blog/2016/04/19/ppm-php-process-manager"/>
            <updated>2016-04-19T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/19/ppm-php-process-manager</id>
            <content type="html"><![CDATA[<p>PHP-PM é um gerenciador de processo, supercharger e load balancer para aplicações PHP que chega a ser 15 vezes mais rápidos do uma aplicação PHP tradicional.</p>

<blockquote>
  <p>It's based on ReactPHP and works best with applications that use request-response frameworks like Symfony's HTTPKernel. The approach of this is to kill the expensive bootstrap of PHP (declaring symbols, loading/parsing files) and the bootstrap of feature-rich frameworks. See Performance section for a quick hint. PHP-PM basically spawns several PHP instances as worker bootstraping your application (eg. the whole Symfony Kernel) and hold it in the memory to be prepared for every incoming request: This is why PHP-PM makes your application so fast.</p>
</blockquote>

<p>Repositório do projeto: <a href="https://github.com/php-pm/php-pm">https://github.com/php-pm/php-pm</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Aplicação Symfony como HTTP Server]]></title>
            <link href="http://www.phpes.org/blog/2016/04/18/aplicacao-symfony-como-http-server"/>
            <updated>2016-04-18T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/18/aplicacao-symfony-como-http-server</id>
            <content type="html"><![CDATA[<p>Tutorial ensinando transformar uma aplicação Symfony em um servidor HTTP pronto para executar, e sem necessidade servidor adicional como por exemplo NGINX e/ou Apache2, utilizando a biblioteca ReactPHP.</p>

<blockquote>
  <p>TL;DR: Run your application as a HTTP server to increase its performances.</p>
  
  <p>HTTP frameworks, such as Symfony, allow us to build applications that have the potential to achieve Super Speed.</p>
  
  <p>A first way to make use of it is to run our application as a HTTP server. In this article we'll take a Symfony application and demonstrate how to run it as HTTP server using ReactPHP.</p>
</blockquote>

<p>Fonte: <a href="https://gnugat.github.io/2016/04/13/super-speed-sf-react-php.html">https://gnugat.github.io/2016/04/13/super-speed-sf-react-php.html</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP must watch]]></title>
            <link href="http://www.phpes.org/blog/2016/04/14/php-must-watch"/>
            <updated>2016-04-14T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/14/php-must-watch</id>
            <content type="html"><![CDATA[<p><a href="https://github.com/phptodayorg/php-must-watch">PHP must watch</a> é um repositório contendo uma lista de conferências sobre PHP:</p>

<blockquote>
  <p>A list of interesting conference talks and great videos on PHP. Inspired by js-must-watch</p>
</blockquote>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Conferência PHP em Porto Alegre]]></title>
            <link href="http://www.phpes.org/blog/2016/04/13/conferencia-php-em-porto-alegre"/>
            <updated>2016-04-13T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/13/conferencia-php-em-porto-alegre</id>
            <content type="html"><![CDATA[<blockquote>
  <p>Está chegando o grande dia da Conferência PHP do Rio Grande do Sul, organizada pelo PHPRS.</p>
  
  <p>Haverá diversas palestras sobre PHP, segurança, carreira e muito mais, além daquele networking de sempre, para fazer novos contatos, encontrar novas oportunidades e aprender mais.</p>
  
  <p>O evento ocorre no dia 7 de Maio de 2016 em Porto Alegre – RS, na Faculdade SENAC. Os ingressos já estão a venda pelo site http://conf.phprs.com.br/. Se você quiser a camiseta, é bom correr pois já estão esgotando.</p>
</blockquote>

<p>Site do evento: <a href="http://conf.phprs.com.br/">http://conf.phprs.com.br/</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[12º Fórum Espírito Livre]]></title>
            <link href="http://www.phpes.org/blog/2016/04/12/12-forum-espirito-livre"/>
            <updated>2016-04-12T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/12/12-forum-espirito-livre</id>
            <content type="html"><![CDATA[<p>Nos dias 4, 5 e 6 de maio acontecerá o <a href="http://forum.espiritolivre.org/12ed/">12º Fórum Espírito Livre</a> em Vila Velha, Espírito Santo.</p>

<blockquote>
  <p>O 12º Fórum Espírito Livre tem como objetivos reunir a comunidade estadual e nacional interessada em desenvolvimento e aplicação de software livre e de código aberto. Dessa maneira, visa compartilhar experiências e conhecimento, de modo a estimular o uso crescente dos softwares livres, tecnologias e padrões abertos, o aprimoramento de tecnologias, a difusão da filosofia de compartilhamento e criação colaborativa e coletiva. Além disso espera-se estreitar a comunicação entre colaboradores e leitores da Revista Espírito Livre.</p>
</blockquote>

<p>A inscrição é gratuita e deve ser feita através do site do evento: <a href="http://forum.espiritolivre.org/12ed/o-evento/inscricao/">http://forum.espiritolivre.org/12ed/o-evento/inscricao/</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Imagine]]></title>
            <link href="http://www.phpes.org/blog/2016/04/11/imagine"/>
            <updated>2016-04-11T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/11/imagine</id>
            <content type="html"><![CDATA[<p><a href="https://github.com/avalanche123/Imagine">Imagine</a> é uma biblioteca OOP de manipulação de imagem com implementações para as extensões GD2, Imagick e Gmagick. Com a Imagine é possível redimensionar, criar thumbnail, adicionar marca d'água, efeitos, etc.</p>

<p>Exemplo:</p>

<pre><code>&lt;?php

$imagine = new Imagine\Gd\Imagine();
// or
$imagine = new Imagine\Imagick\Imagine();
// or
$imagine = new Imagine\Gmagick\Imagine();

$size    = new Imagine\Image\Box(40, 40);

$mode    = Imagine\Image\ImageInterface::THUMBNAIL_INSET;
// or
$mode    = Imagine\Image\ImageInterface::THUMBNAIL_OUTBOUND;

$imagine-&gt;open('/path/to/large_image.jpg')
    -&gt;thumbnail($size, $mode)
    -&gt;save('/path/to/thumbnail.png')
</code></pre>

<p>Documentação: <a href="http://imagine.readthedocs.org/en/latest/">http://imagine.readthedocs.org/en/latest/</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP-FFMpeg]]></title>
            <link href="http://www.phpes.org/blog/2016/04/08/php-ffmpeg"/>
            <updated>2016-04-08T00:00:00-03:00</updated>
            <id>http://www.phpes.org/blog/2016/04/08/php-ffmpeg</id>
            <content type="html"><![CDATA[<p><a href="https://github.com/PHP-FFMpeg/PHP-FFMpeg">PHP-FFMpeg</a> é um projeto que representa de forma orientada a objetos (OOP) a biblioteca ffmpeg/avconv, facilitando a manipulação de arquivos de áudio e vídeo.</p>

<blockquote>
  <p>This library requires a working FFMpeg install. You will need both FFMpeg and FFProbe binaries to use it. Be sure that these binaries can be located with system PATH to get the benefit of the binary detection, otherwise you should have to explicitely give the binaries path on load.</p>
</blockquote>

<p>Exemplo:</p>

<pre><code>$ffmpeg = FFMpeg\FFMpeg::create();
$video = $ffmpeg-&gt;open('video.mpg');
$video
    -&gt;filters()
    -&gt;resize(new FFMpeg\Coordinate\Dimension(320, 240))
    -&gt;synchronize();
$video
    -&gt;frame(FFMpeg\Coordinate\TimeCode::fromSeconds(10))
    -&gt;save('frame.jpg');
$video
    -&gt;save(new FFMpeg\Format\Video\X264(), 'export-x264.mp4')
    -&gt;save(new FFMpeg\Format\Video\WMV(), 'export-wmv.wmv')
    -&gt;save(new FFMpeg\Format\Video\WebM(), 'export-webm.webm');
</code></pre>
]]></content>
        </entry>
    </feed>